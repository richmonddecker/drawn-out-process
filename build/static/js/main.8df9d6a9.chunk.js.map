{"version":3,"sources":["components/Navigation.jsx","components/Home.jsx","components/RepetitiveIndex.jsx","scripts/videos.js","components/Repetitive.jsx","components/Main.jsx","App.jsx","serviceWorker.js","index.jsx","videos/kochpinski.mp4","videos/snowflake.mp4","videos/plasma-ball.mp4"],"names":["Navigation","props","context","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSelect","bind","assertThisInitialized","state","activeKey","setState","react_default","a","createElement","PanelGroup","accordion","id","onSelect","Panel","eventKey","Heading","Title","toggle","Link","to","Collapse","ListGroup","ListGroupItem","React","Component","Home","className","RepetitiveIndex","videos","kochpinski","snowflake","plasma-ball","plasma_ball","Repetitive","updateDimensions","name","match","params","class","height","width","autoPlay","loop","muted","src","type","dimension","Math","min","window","innerWidth","innerHeight","addEventListener","removeEventListener","reload","console","log","location","NoMatch","Main","Switch","Route","exact","path","component","onEnter","App","components_Navigation","components_Main","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8df9d6a9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ListGroup, ListGroupItem, Panel, PanelGroup } from \"react-bootstrap\";\n\nclass Navigation extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.state = {activeKey: \"1\"}; \n  }\n\n  handleSelect(activeKey) {\n    this.setState({ activeKey });\n  }\n\n  render() {\n    return (\n      <PanelGroup\n        accordion\n        id=\"accordion-controlled-example\"\n        activeKey={this.state.activeKey}\n        onSelect={this.handleSelect}\n      >\n        <Panel eventKey=\"1\">\n          <Panel.Heading>\n            <Panel.Title toggle>\n              <Link to=\"/creative\">Creative</Link>\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <ListGroup>\n              <ListGroupItem>\n                <Link to=\"/creative/chords\">Chords</Link>\n              </ListGroupItem>\n            </ListGroup>\n          </Panel.Collapse>\n        </Panel>\n        <Panel eventKey=\"2\">\n          <Panel.Heading>\n            <Panel.Title toggle>\n              <Link to=\"/repetitive\">Repetitive</Link>\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <ListGroup>\n              <ListGroupItem>\n                <Link to=\"/reptitive/kochpinski\">Kochpinski</Link>\n              </ListGroupItem>\n              <ListGroupItem>\n                <Link to=\"/reptitive/snowflake\">Snowflake</Link>\n              </ListGroupItem>\n              <ListGroupItem>\n                <Link to=\"/reptitive/plasma-ball\">Plasma Ball</Link>\n              </ListGroupItem>\n            </ListGroup>\n          </Panel.Collapse>\n        </Panel>\n        <Panel eventKey=\"3\">\n          <Panel.Heading>\n            <Panel.Title toggle>\n              <Link to=\"/generative\">Generative</Link>\n            </Panel.Title>\n          </Panel.Heading>\n          <Panel.Collapse>\n            <ListGroup>\n              <ListGroupItem>\n                <Link to=\"/generative/nothing\">Nothing</Link>\n              </ListGroupItem>\n            </ListGroup>\n          </Panel.Collapse>\n        </Panel>\n      </PanelGroup>\n    );\n  }\n}\n\n\nexport default Navigation;\n","import React from \"react\";\nimport \"../styles/App.css\";\n\nconst Home = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <h1>Drawn Out Process</h1>\n    </header>\n  </div>\n);\n\nexport default Home;\n","import React from \"react\";\n\nconst RepetitiveIndex = () => (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <h1>Here are all the Repetitive things.</h1>\n    </header>\n  </div>\n);\n\nexport default RepetitiveIndex;\n","import kochpinski from \"../videos/kochpinski.mp4\";\nimport snowflake from \"../videos/snowflake.mp4\";\nimport plasma_ball from \"../videos/plasma-ball.mp4\";\n\nexport default {\n  kochpinski,\n  snowflake,\n  \"plasma-ball\": plasma_ball\n};","import React from \"react\";\nimport videos from \"../scripts/videos\";\nimport \"../styles/App.css\";\n\nclass Repetitive extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateDimensions = this.updateDimensions.bind(this);\n  }\n\n  render() {\n    const name = this.props.match.params.name;\n    return (\n      <div class=\"fill-screen\">\n        <video height={this.state.height} width={this.state.width} autoPlay loop muted>\n          <source src={videos[name]} type=\"video/mp4\"/>\n        </video>\n      </div>\n    );\n  }\n\n  updateDimensions() {\n    const dimension = Math.min(window.innerWidth, window.innerHeight);\n    this.setState({width: dimension, height: dimension});\n  }\n\n  componentWillMount() {\n    this.updateDimensions();\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  componentWillUnMount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n}\n\nexport default Repetitive;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\"\nimport Home from \"./Home\";\nimport RepetitiveIndex from \"./RepetitiveIndex\";\nimport Repetitive from \"./Repetitive\";\n\nconst reload = () => {console.log(\"HI BOOBS\"); window.location.reload();};\n\nconst NoMatch = () => (\n  <div>404</div>\n);\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path=\"/\" component={Home}/>\n      <Route exact path=\"/repetitive\" component={RepetitiveIndex}/>\n      <Route path=\"/repetitive/:name\" component={Repetitive}/>\n      <Route component={NoMatch} />\n      <Route onEnter={reload} />\n    </Switch>\n  </main>\n)\n\nexport default Main;\n","import React from \"react\";\nimport Navigation from \"./components/Navigation\";\nimport Main from \"./components/Main\"\n\nconst App = () => (\n  <div>\n    <Navigation />\n    <Main />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/kochpinski.c60585cd.mp4\";","module.exports = __webpack_public_path__ + \"static/media/snowflake.ea0aeee4.mp4\";","module.exports = __webpack_public_path__ + \"static/media/plasma-ball.391f0263.mp4\";"],"sourceRoot":""}