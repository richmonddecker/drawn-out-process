{"ast":null,"code":"import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\nvar history = createBrowserHistory();\nvar state = {\n  navigation: {\n    openNavSection: \"/repetitive\",\n    barsOpen: false\n  },\n  configuration: {\n    fullScreen: false\n  },\n  trigger: {\n    saveFrame: false,\n    resetFrame: false\n  }\n};\nexport default function configureStore() {\n  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : state;\n  return createStore(rootReducer(history), initialState, compose(applyMiddleware(routerMiddleware(history), thunk)));\n}","map":{"version":3,"sources":["/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/src/store.js"],"names":["createBrowserHistory","applyMiddleware","compose","createStore","routerMiddleware","thunk","rootReducer","history","state","navigation","openNavSection","barsOpen","configuration","fullScreen","trigger","saveFrame","resetFrame","configureStore","initialState"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,SAArC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,IAAMC,OAAO,GAAGP,oBAAoB,EAApC;AAEA,IAAMQ,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE;AACVC,IAAAA,cAAc,EAAE,aADN;AAEVC,IAAAA,QAAQ,EAAE;AAFA,GADA;AAKZC,EAAAA,aAAa,EAAE;AACbC,IAAAA,UAAU,EAAE;AADC,GALH;AAQZC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,KADJ;AAEPC,IAAAA,UAAU,EAAE;AAFL;AARG,CAAd;AAcA,eAAe,SAASC,cAAT,GAA4C;AAAA,MAApBC,YAAoB,uEAAPV,KAAO;AACzD,SAAOL,WAAW,CAChBG,WAAW,CAACC,OAAD,CADK,EAEhBW,YAFgB,EAGhBhB,OAAO,CACLD,eAAe,CACbG,gBAAgB,CAACG,OAAD,CADH,EAEbF,KAFa,CADV,CAHS,CAAlB;AAUD","sourcesContent":["import { createBrowserHistory } from \"history\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducer\";\n\nconst history = createBrowserHistory();\n\nconst state = {\n  navigation: {\n    openNavSection: \"/repetitive\",\n    barsOpen: false\n  },\n  configuration: {\n    fullScreen: false\n  },\n  trigger: {\n    saveFrame: false,\n    resetFrame: false\n  }\n};\n\nexport default function configureStore(initialState=state) {\n  return createStore(\n    rootReducer(history),\n    initialState,\n    compose(\n      applyMiddleware(\n        routerMiddleware(history),\n        thunk\n      )\n    )\n  );\n}"]},"metadata":{},"sourceType":"module"}