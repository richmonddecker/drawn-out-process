{"ast":null,"code":"var _jsxFileName = \"/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/src/components/SidebarButtons.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Glyphicon } from \"reactstrap\";\nimport { toggleBarTabs as _toggleBarTabs, toggleBarLock as _toggleBarLock } from \"../actions/configuration.js\";\n\nvar SidebarButtons = function SidebarButtons(props) {\n  var character = props.fullScreen ? React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"\\u292B\") : React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"\\u292E\");\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"info\",\n    block: true,\n    outline: !props.fullScreen,\n    onClick: props.toggleFullScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Full Screen \", character), React.createElement(Button, {\n    color: \"info\",\n    block: true,\n    outline: !props.fullScreen,\n    onClick: props.toggleFullScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Full Screen \", character));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    barLock: state.configuration.barLock,\n    barTabs: state.configuration.barTabs\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleBarLock: function toggleBarLock() {\n      return dispatch(_toggleBarLock());\n    },\n    toggleBarTabs: function toggleBarTabs() {\n      return dispatch(_toggleBarTabs());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FullscreenButton);","map":{"version":3,"sources":["/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/src/components/SidebarButtons.jsx"],"names":["React","connect","Button","Glyphicon","toggleBarTabs","toggleBarLock","SidebarButtons","props","character","fullScreen","toggleFullScreen","mapStateToProps","state","barLock","configuration","barTabs","mapDispatchToProps","dispatch","FullscreenButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,YAAlC;AAEA,SAASC,aAAa,IAAbA,cAAT,EAAwBC,aAAa,IAAbA,cAAxB,QAA6C,6BAA7C;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,MAAMC,SAAS,GAAGD,KAAK,CAACE,UAAN,GAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnB,GAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvD;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,OAAO,EAAE,CAACF,KAAK,CAACE,UAHlB;AAKE,IAAA,OAAO,EAAEF,KAAK,CAACG,gBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOeF,SAPf,CADF,EAUE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,OAAO,EAAE,CAACD,KAAK,CAACE,UAHlB;AAKE,IAAA,OAAO,EAAEF,KAAK,CAACG,gBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOeF,SAPf,CAVF,CADF;AAsBD,CAxBD;;AA0BA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCC,IAAAA,OAAO,EAAED,KAAK,CAACE,aAAN,CAAoBD,OADK;AAElCE,IAAAA,OAAO,EAAEH,KAAK,CAACE,aAAN,CAAoBC;AAFK,GAAZ;AAAA,CAAxB;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxCZ,IAAAA,aAAa,EAAE;AAAA,aAAMY,QAAQ,CAACZ,cAAa,EAAd,CAAd;AAAA,KADyB;AAExCD,IAAAA,aAAa,EAAE;AAAA,aAAMa,QAAQ,CAACb,cAAa,EAAd,CAAd;AAAA;AAFyB,GAAf;AAAA,CAA3B;;AAKA,eAAeH,OAAO,CACpBU,eADoB,EAEpBK,kBAFoB,CAAP,CAGbE,gBAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Glyphicon } from \"reactstrap\";\n\nimport { toggleBarTabs, toggleBarLock } from \"../actions/configuration.js\";\n\nconst SidebarButtons = (props) => {\n  const character = props.fullScreen ? <b>&#10539;</b> : <b>&#10542;</b>;\n  return (\n    <div>\n      <Button\n        color=\"info\"\n        block\n        outline={!props.fullScreen}\n        \n        onClick={props.toggleFullScreen}\n      >\n        Full Screen {character}\n      </Button>\n      <Button\n        color=\"info\"\n        block\n        outline={!props.fullScreen}\n        \n        onClick={props.toggleFullScreen}\n      >\n        Full Screen {character}\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  barLock: state.configuration.barLock,\n  barTabs: state.configuration.barTabs\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  toggleBarLock: () => dispatch(toggleBarLock()),\n  toggleBarTabs: () => dispatch(toggleBarTabs())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FullscreenButton);\n"]},"metadata":{},"sourceType":"module"}