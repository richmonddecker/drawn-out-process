{"ast":null,"code":"var sketch = function sketch(p) {\n  var radius = 0;\n  var lastMillis = 0;\n  var settings = {\n    hueCycles: 3,\n    hueOffset: 0,\n    lineSpeed: 1000,\n    lineThickness: 1,\n    lineOpacity: 50,\n    spanPower: 1,\n    colorPower: 2\n  };\n\n  function clearCircle() {\n    p.background(255);\n    drawBorder();\n  }\n\n  p.setup = function () {\n    radius = p.min(window.innerWidth, window.innerHeight) / 2;\n    p.createCanvas(2 * radius, 2 * radius);\n    p.colorMode(p.HSB, 1);\n    clearCircle();\n  };\n\n  p.draw = function () {\n    var ellapsed = getEllapsedTime();\n    var coords = getCoords(); //let settings = getSettings();\n\n    if (shouldDraw()) {\n      makeLines(coords, settings, ellapsed);\n    }\n\n    drawBorder();\n  };\n\n  p.interpretProps = function (_ref) {\n    var controls = _ref.controls;\n    settings.hueCycles = parseInt(controls.hueCycles, 10);\n    settings.hueOffset = parseInt(controls.hueOffset, 10);\n    settings.lineSpeed = parseInt(controls.lineSpeed, 10);\n    settings.lineThickness = parseInt(controls.lineThickness, 10);\n    settings.lineOpacity = parseInt(controls.lineOpacity, 10);\n    settings.spanPower = parseInt(controls.spanPower, 10);\n    settings.colorPower = parseInt(controls.colorPower, 10);\n    console.log(\"SETTINGS NOW: \");\n  };\n\n  function drawBorder() {\n    var r = 10000;\n    p.push();\n    p.translate(p.width / 2, p.height / 2);\n    p.stroke(0);\n    p.noFill();\n    p.strokeWeight(r - 2 * radius);\n    p.ellipse(0, 0, r, r);\n    p.pop();\n  }\n\n  function getCoords() {\n    var x = p.mouseX - p.width / 2;\n    var y = p.mouseY - p.height / 2;\n    return {\n      x: x,\n      y: y,\n      r: p.sqrt(p.sq(x) + p.sq(y)),\n      th: p.PI + p.atan2(y, x)\n    };\n  }\n\n  function getColor(coords, settings) {\n    if (coords.r > radius) {\n      return p.color(0, 0, 0, 1);\n    }\n\n    var h = (settings.hueCycles * (coords.th / p.TWO_PI + 1.75) + 1 + settings.hueOffset / 360.0) % 1.0;\n    var s = p.pow(coords.r / radius, 1.0 / settings.colorPower);\n    var b = 0.5 + 0.5 * p.pow(coords.r / radius, 1.0 / settings.colorPower);\n    var a = settings.lineOpacity / 100.0;\n    return p.color(h, s, b, a);\n  }\n\n  function getAngleSpan(coords, settings) {\n    return p.PI * p.pow((radius - coords.r) / radius, settings.spanPower);\n  }\n\n  function getEllapsedTime() {\n    var nextMillis = p.millis();\n    var ellapsed = nextMillis - lastMillis;\n    lastMillis = nextMillis;\n    return ellapsed / 1000.0;\n  }\n\n  function getNumLines(settings, ellapsed) {\n    var factor = ellapsed * settings.lineSpeed;\n    var numLines = p.floor(factor);\n\n    if (p.random(0, 1) < factor % 1) {\n      numLines += 1;\n    }\n\n    return numLines;\n  }\n\n  function drawLine(span) {\n    p.push();\n    p.rotate(p.random(-span / 2, span / 2));\n    p.line(0, -2 * radius, 0, 2 * radius);\n    p.pop();\n  }\n\n  function makeLines(coords, settings, ellapsed) {\n    if (coords.r > radius) {\n      return;\n    }\n\n    var numLines = getNumLines(settings, ellapsed);\n    var span = getAngleSpan(coords, settings);\n    p.push();\n    p.translate(coords.x + p.width / 2, coords.y + p.height / 2);\n    p.rotate(coords.th);\n    p.strokeWeight(settings.lineThickness);\n    p.stroke(getColor(coords, settings));\n\n    for (var i = 0; i < numLines; i++) {\n      drawLine(span);\n    }\n\n    p.pop();\n  }\n\n  function shouldDraw() {\n    return !p.isBlocked && p.mouseIsPressed;\n  }\n};\n\nexport default sketch; // function makeTheButtons() {\n//   let button;\n//     button = createButton(\"Reset\");\n//     button.mouseClicked(resizeCircle);\n//     button.position(20, 20);\n//     button = createButton(\"Full Screen\");\n//     button.mouseClicked(toggleFullscreen);\n//     button.position(20, 40);\n// }\n// function makeTheSliders() {\n//   sliders = {};\n//   sliders.hueCycles = createSlider(0, 36, 6, 1);\n//   sliders.hueCycles.position(20, 60);\n//   sliders.lineSpeed = createSlider(1, 10000, 1000);\n//   sliders.lineSpeed.position(20, 80);\n//   sliders.lineThickness = createSlider(1, 20, 1, 1);\n//   sliders.lineThickness.position(20, 100);\n//   sliders.lineOpacity = createSlider(1, 100, 50, 1);\n//   sliders.lineOpacity.position(20, 120);\n//   sliders.spanPower = createSlider(0.1, 10, 1, 0.1);\n//   sliders.spanPower.position(20, 140);\n//   sliders.colorPower = createSlider(0.1, 10, 2, 0.1);\n//   sliders.colorPower.position(20, 160);\n//   sliders.hueOffset = createSlider(0, 360, 0, 1);\n//   sliders.hueOffset.position(20, 180);\n// }\n// function getSettings() {\n//   return {\n//     hueCycles: sliders.hueCycles.value(),\n//     lineSpeed: sliders.lineSpeed.value(),\n//     lineThickness: sliders.lineThickness.value(),\n//     lineOpacity: sliders.lineOpacity.value(),\n//     spanPower: sliders.spanPower.value(),\n//     colorPower: sliders.colorPower.value(),\n//     hueOffset: sliders.hueOffset.value()\n//   }\n// }","map":{"version":3,"sources":["/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/src/sketches/chord-art.js"],"names":["sketch","p","radius","lastMillis","settings","hueCycles","hueOffset","lineSpeed","lineThickness","lineOpacity","spanPower","colorPower","clearCircle","background","drawBorder","setup","min","window","innerWidth","innerHeight","createCanvas","colorMode","HSB","draw","ellapsed","getEllapsedTime","coords","getCoords","shouldDraw","makeLines","interpretProps","controls","parseInt","console","log","r","push","translate","width","height","stroke","noFill","strokeWeight","ellipse","pop","x","mouseX","y","mouseY","sqrt","sq","th","PI","atan2","getColor","color","h","TWO_PI","s","pow","b","a","getAngleSpan","nextMillis","millis","getNumLines","factor","numLines","floor","random","drawLine","span","rotate","line","i","isBlocked","mouseIsPressed"],"mappings":"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","sourcesContent":["const sketch = (p) => {\n  let radius = 0;\n  let lastMillis = 0;\n  let settings = {\n    hueCycles: 3,\n    hueOffset: 0,\n    lineSpeed: 1000,\n    lineThickness: 1,\n    lineOpacity: 50,\n    spanPower: 1,\n    colorPower: 2\n  }\n\n  function clearCircle() {\n    p.background(255);\n    drawBorder();\n  }\n\n  p.setup = function() {\n    radius = p.min(window.innerWidth, window.innerHeight) / 2;\n    p.createCanvas(2 * radius, 2 * radius);\n    p.colorMode(p.HSB, 1);\n    clearCircle();\n  }\n\n  p.draw = function() {\n    let ellapsed = getEllapsedTime();\n    let coords = getCoords();\n    //let settings = getSettings();\n    if (shouldDraw()) {\n      makeLines(coords, settings, ellapsed);\n    }\n    drawBorder();\n  }\n\n  p.interpretProps = function({ controls}) {\n    settings.hueCycles = parseInt(controls.hueCycles, 10);\n    settings.hueOffset = parseInt(controls.hueOffset, 10);\n    settings.lineSpeed = parseInt(controls.lineSpeed, 10);\n    settings.lineThickness = parseInt(controls.lineThickness, 10);\n    settings.lineOpacity = parseInt(controls.lineOpacity, 10);\n    settings.spanPower = parseInt(controls.spanPower, 10);\n    settings.colorPower = parseInt(controls.colorPower, 10);\n    console.log(\"SETTINGS NOW: \")\n  }\n\n  function drawBorder() {\n    let r = 10000;\n    p.push();\n    p.translate(p.width/2, p.height/2);\n    p.stroke(0);\n    p.noFill();\n    p.strokeWeight(r - 2 * radius);\n    p.ellipse(0, 0, r, r);\n    p.pop();\n  }\n\n  function getCoords() {\n    let x = p.mouseX - p.width/2;\n    let y = p.mouseY - p.height/2;\n    return {\n      x: x,\n      y: y,\n      r: p.sqrt(p.sq(x) + p.sq(y)),\n      th: p.PI + p.atan2(y, x)\n    };\n  }\n\n  function getColor(coords, settings) {\n    if (coords.r > radius) {\n      return p.color(0, 0, 0, 1);\n    }\n    let h = (settings.hueCycles * (coords.th / p.TWO_PI + 1.75) + 1 + settings.hueOffset / 360.0) % 1.0\n    let s = p.pow(coords.r / radius, 1.0 / settings.colorPower);\n    let b = (0.5 + 0.5 * p.pow(coords.r / radius, 1.0 / settings.colorPower));\n    let a = settings.lineOpacity / 100.0;\n    return p.color(h, s, b, a);\n  }\n\n  function getAngleSpan(coords, settings) {\n    return p.PI * p.pow((radius - coords.r) / radius, settings.spanPower);\n  }\n\n  function getEllapsedTime() {\n    let nextMillis = p.millis();\n    let ellapsed = nextMillis - lastMillis;\n    lastMillis = nextMillis;\n    return ellapsed / 1000.0;\n  }\n\n  function getNumLines(settings, ellapsed) {\n    let factor = ellapsed * settings.lineSpeed;\n    let numLines = p.floor(factor);\n    if (p.random(0, 1) < factor % 1) {\n      numLines += 1;\n    }\n    return numLines;\n  }\n\n  function drawLine(span) {\n    p.push();\n    p.rotate(p.random(-span/2, span/2));\n    p.line(0, -2 * radius, 0, 2 * radius);\n    p.pop();\n  }\n\n  function makeLines(coords, settings, ellapsed) {\n    if (coords.r > radius) {\n      return;\n    }\n    let numLines = getNumLines(settings, ellapsed);\n    let span = getAngleSpan(coords, settings);\n    p.push();\n    p.translate(coords.x + p.width/2, coords.y + p.height/2);\n    p.rotate(coords.th);\n    p.strokeWeight(settings.lineThickness);\n    p.stroke(getColor(coords, settings));\n    for (let i = 0; i < numLines; i++) {\n      drawLine(span);\n    }\n    p.pop();\n  }\n\n  function shouldDraw() {\n    return !p.isBlocked && p.mouseIsPressed;\n  }\n};\n\nexport default sketch;\n\n// function makeTheButtons() {\n//   let button;\n    \n//     button = createButton(\"Reset\");\n//     button.mouseClicked(resizeCircle);\n//     button.position(20, 20);\n    \n//     button = createButton(\"Full Screen\");\n//     button.mouseClicked(toggleFullscreen);\n//     button.position(20, 40);\n// }\n\n\n// function makeTheSliders() {\n//   sliders = {};\n//   sliders.hueCycles = createSlider(0, 36, 6, 1);\n//   sliders.hueCycles.position(20, 60);\n//   sliders.lineSpeed = createSlider(1, 10000, 1000);\n//   sliders.lineSpeed.position(20, 80);\n//   sliders.lineThickness = createSlider(1, 20, 1, 1);\n//   sliders.lineThickness.position(20, 100);\n//   sliders.lineOpacity = createSlider(1, 100, 50, 1);\n//   sliders.lineOpacity.position(20, 120);\n//   sliders.spanPower = createSlider(0.1, 10, 1, 0.1);\n//   sliders.spanPower.position(20, 140);\n//   sliders.colorPower = createSlider(0.1, 10, 2, 0.1);\n//   sliders.colorPower.position(20, 160);\n//   sliders.hueOffset = createSlider(0, 360, 0, 1);\n//   sliders.hueOffset.position(20, 180);\n// }\n\n// function getSettings() {\n//   return {\n//     hueCycles: sliders.hueCycles.value(),\n//     lineSpeed: sliders.lineSpeed.value(),\n//     lineThickness: sliders.lineThickness.value(),\n//     lineOpacity: sliders.lineOpacity.value(),\n//     spanPower: sliders.spanPower.value(),\n//     colorPower: sliders.colorPower.value(),\n//     hueOffset: sliders.hueOffset.value()\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}