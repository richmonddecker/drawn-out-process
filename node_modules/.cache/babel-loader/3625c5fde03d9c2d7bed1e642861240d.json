{"ast":null,"code":"import _classCallCheck from \"/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/src/components/Configuration.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport images from \"../scripts/images\";\nimport TwoButtons from \"./TwoButtons\";\nimport FullscreenButton from \"./FullscreenButton\";\nimport SidebarButtons from \"./SidebarButtons\";\nimport { openBars as _openBars, closeBars as _closeBars } from \"../actions/navigation.js\";\n\nvar Configuration =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Configuration, _React$Component);\n\n  function Configuration() {\n    _classCallCheck(this, Configuration);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Configuration).apply(this, arguments));\n  }\n\n  _createClass(Configuration, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"navigation-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"side-bar tool-bar\",\n        style: this.props.barStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(FullscreenButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(TwoButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), React.createElement(SidebarButtons, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \"bar-tab right-tab\",\n        onMouseOver: this.props.openBars,\n        onClick: this.props.openBars,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"rightTab\",\n        style: this.props.tabOutStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"\\u21C7\"), React.createElement(\"span\", {\n        id: \"rightTab\",\n        style: this.props.tabOutStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"\\u21C9\")));\n    }\n  }]);\n\n  return Configuration;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var showBars = state.navigation.barsOpen || state.configuration.barLock;\n  return {\n    barStyle: {\n      right: showBars ? \"0\" : \"-200px\",\n      opacity: showBars ? 1 : 0\n    },\n    tabOutStyle: {\n      right: showBars ? \"200px\" : \"0\",\n      opacity: showBars ? 0 : 1\n    },\n    tabInStyle: {\n      right: showBars ? \"200px\" : \"0\",\n      opacity: showBars ? 1 : 0\n    }\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    openBars: function openBars() {\n      return dispatch(_openBars());\n    },\n    closeBars: function closeBars() {\n      return dispatch(_closeBars());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Configuration);","map":{"version":3,"sources":["/Users/richmonddecker/Documents/DrawnOutProcess/drawn-out-process/src/components/Configuration.jsx"],"names":["React","connect","Link","NavLink","images","TwoButtons","FullscreenButton","SidebarButtons","openBars","closeBars","Configuration","props","barStyle","tabOutStyle","Component","mapStateToProps","state","showBars","navigation","barsOpen","configuration","barLock","right","opacity","tabInStyle","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,kBAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,QAAQ,IAARA,SAAT,EAAmBC,SAAS,IAATA,UAAnB,QAAoC,0BAApC;;IAGMC,a;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,QAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,EAME;AAAK,QAAA,KAAK,EAAC,mBAAX;AACE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWH,QAD1B;AAEE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWH,QAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAM,QAAA,EAAE,EAAC,UAAT;AAAoB,QAAA,KAAK,EAAE,KAAKG,KAAL,CAAWE,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE;AAAM,QAAA,EAAE,EAAC,UAAT;AAAoB,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CANF,CADF;AAgBD;;;;EAlByBb,KAAK,CAACc,S;;AAmBjC;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,UAAN,CAAiBC,QAAjB,IAA8BH,KAAK,CAACI,aAAN,CAAoBC,OAAnE;AACA,SAAQ;AACNT,IAAAA,QAAQ,EAAG;AACTU,MAAAA,KAAK,EAAEL,QAAQ,GAAG,GAAH,GAAS,QADf;AAETM,MAAAA,OAAO,EAAEN,QAAQ,GAAG,CAAH,GAAO;AAFf,KADL;AAKNJ,IAAAA,WAAW,EAAG;AACZS,MAAAA,KAAK,EAAEL,QAAQ,GAAG,OAAH,GAAa,GADhB;AAEZM,MAAAA,OAAO,EAAEN,QAAQ,GAAG,CAAH,GAAO;AAFZ,KALR;AASNO,IAAAA,UAAU,EAAG;AACXF,MAAAA,KAAK,EAAEL,QAAQ,GAAG,OAAH,GAAa,GADjB;AAEXM,MAAAA,OAAO,EAAEN,QAAQ,GAAG,CAAH,GAAO;AAFb;AATP,GAAR;AAcD,CAhBD;;AAkBA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxClB,IAAAA,QAAQ,EAAE;AAAA,aAAMkB,QAAQ,CAAClB,SAAQ,EAAT,CAAd;AAAA,KAD8B;AAExCC,IAAAA,SAAS,EAAE;AAAA,aAAMiB,QAAQ,CAACjB,UAAS,EAAV,CAAd;AAAA;AAF6B,GAAf;AAAA,CAA3B;;AAKA,eAAeR,OAAO,CACpBc,eADoB,EAEpBU,kBAFoB,CAAP,CAGbf,aAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport images from \"../scripts/images\";\n\nimport TwoButtons from \"./TwoButtons\";\nimport FullscreenButton from \"./FullscreenButton\";\nimport SidebarButtons from \"./SidebarButtons\";\nimport { openBars, closeBars } from \"../actions/navigation.js\";\n\n\nclass Configuration extends React.Component {\n  render() {\n    return (\n      <div class=\"navigation-container\">\n        <div className=\"side-bar tool-bar\" style={this.props.barStyle}>\n          <FullscreenButton />\n          <TwoButtons />\n          <SidebarButtons />\n        </div>\n        <div class=\"bar-tab right-tab\"\n          onMouseOver={this.props.openBars}\n          onClick={this.props.openBars}\n        >\n          <span id=\"rightTab\" style={this.props.tabOutStyle}>&#8647;</span>\n          <span id=\"rightTab\" style={this.props.tabOutStyle}>&#8649;</span>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  const showBars = state.navigation.barsOpen ||  state.configuration.barLock;\n  return ({\n    barStyle : {\n      right: showBars ? \"0\" : \"-200px\",\n      opacity: showBars ? 1 : 0\n    },\n    tabOutStyle : {\n      right: showBars ? \"200px\" : \"0\",\n      opacity: showBars ? 0 : 1\n    },\n    tabInStyle : {\n      right: showBars ? \"200px\" : \"0\",\n      opacity: showBars ? 1 : 0\n    }\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  openBars: () => dispatch(openBars()),\n  closeBars: () => dispatch(closeBars())\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Configuration);\n"]},"metadata":{},"sourceType":"module"}